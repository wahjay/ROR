<h1>Edit article</h1>

<!--
Passing the article object to the form_with method will automatically set the URL
for submitting the edited article form. This option tells Rails that we want this
form to be submitted via the PATCH/PUT HTTP(update).

Also, passing a model object to form_with, like model: @article in the edit view above,
will cause form helpers to fill in form fields with the corresponding values of the object.
Passing in a symbol scope such as scope: :article, as was done in the new view, only creates
empty form fields.

When you set the model argument then scope and url are automatically derived from it.
-->
<%= form_with model: @article, url: "/articles/#{@article.id}",local: true do |form| %>

  <% if @article.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= pluralize(@article.errors.count, "error") %>
        prohibited this article from being saved:
      </h2>
      <ul>
        <% @article.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <p>
    <%= form.label :title %><br>
    <%= form.text_field :title %>
  </p>

  <p>
    <%= form.label :text %><br>
    <%= form.text_area :text %>
  </p>

  <p>
    <%= form.submit %>
  </p>

<% end %>

<%= link_to 'Back', articles_path %>
